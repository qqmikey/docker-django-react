version: '3.7'
services:
  server:
    command: /bin/bash ./bin/prod.sh
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        buildno: 1
    container_name: cserver
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}

      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./server:/app
      - ./logs/gunicorn:/var/log/gunicorn
      - ./frontend/dist:/app/frontend_dist:ro
    expose:
      - "8000"
    depends_on:
      - db
    restart: always
  db:
    image: postgres:14
    container_name: cdb
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  nginx:
    image: nginx:1.21
    container_name: cnginx
    restart: always
    ports:
      - "80:80"
#      - "443:443"
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./server:/app:ro
      - ./frontend/dist:/app/frontend_dist:ro
    depends_on:
      - server
      - frontend
  frontend:
    command: bash -c "yarn build && mkdir -p dist && rm -rf dist/* && mv build/* dist/"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        buildno: 1
    container_name: cfront
    volumes:
      - ./frontend:/app
      - /app/node_modules
